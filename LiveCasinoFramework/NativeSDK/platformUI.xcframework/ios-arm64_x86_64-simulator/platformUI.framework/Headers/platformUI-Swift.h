#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef PLATFORMUI_SWIFT_H
#define PLATFORMUI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import Middle;
@import ObjectiveC;
@import Tools;
@import UIKit;
@import resources;
#endif

#import <platformUI/platformUI.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="platformUI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

/// GameMenuButton scene output
SWIFT_CLASS("_TtC10platformUI22BottomPanelSceneOutput")
@interface BottomPanelSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10platformUI24SceneViewModelUIDelegate_")
@protocol SceneViewModelUIDelegate
@end

@class PTUResourceObjectStyleButton;
@class PTUStyleLabel;
@class PTUResourceObjectStyleImageView;
@class NSString;

SWIFT_PROTOCOL("_TtP10platformUI30BottomPanelViewModelUIDelegate_")
@protocol BottomPanelViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)setBalanceLabelStyle:(PTUResourceObjectStyleButton * _Nonnull)resourceStyle;
- (void)setGameModeLabelStyle:(PTUStyleLabel * _Nonnull)style;
- (void)setLogoImageStyle:(PTUResourceObjectStyleImageView * _Nonnull)resourceStyle;
- (void)setGameMode:(PTSDKGameMode)mode;
- (void)setDynamicBalance:(NSString * _Nonnull)dynamicBalance;
- (void)didChangeBottomBarVisibility:(BOOL)bottomBarVisible;
@end


/// <#Description#>
SWIFT_CLASS("_TtC10platformUI17GameLoadingOutput")
@interface GameLoadingOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PTUResourceObjectStyleGameLoadingWrapper;

SWIFT_PROTOCOL("_TtP10platformUI30GameLoadingViewModelUIDelegate_")
@protocol GameLoadingViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)showLoadingView;
- (void)hideLoadingView;
- (void)startAnimation;
- (void)stopAnimation;
- (void)hideText;
- (void)updateProgress:(double)progress;
- (void)applySceneStyle:(PTUResourceObjectStyleGameLoadingWrapper * _Nonnull)objectStyleResourceWrapper;
@end


/// GameMenuButton scene output
SWIFT_CLASS("_TtC10platformUI25GameMenuButtonSceneOutput")
@interface GameMenuButtonSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10platformUI33GameMenuButtonViewModelUIDelegate_")
@protocol GameMenuButtonViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)setNoticeLabelStyle:(PTUStyleLabel * _Nonnull)style;
- (void)showNotice:(BOOL)show;
- (void)changeEnablingOfMenuButton:(BOOL)enabled;
- (void)changeVisibleOfBackButton:(BOOL)isVisible;
- (void)changeVisibleOfBottomBar:(BOOL)isVisible;
- (void)changeVisibleOfMenuButton:(BOOL)isVisible;
@end


SWIFT_CLASS("_TtC10platformUI19GameMenuSceneOutput")
@interface GameMenuSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol GameMenuViewModelUIDelegate;
@class PTUResourceObjectStyleGameMenuSideElement;
@class PTUResourceObjectStyleFooterElement;
@class NSURL;

/// Game menu view model. It responsible for providing game menu elements.
SWIFT_CLASS("_TtC10platformUI17GameMenuViewModel")
@interface GameMenuViewModel : NSObject
@property (nonatomic, strong) GameMenuSceneOutput * _Nonnull output;
@property (nonatomic, weak) id <GameMenuViewModelUIDelegate> _Nullable uiDelegate;
/// Array of style resource
@property (nonatomic, copy) NSArray<PTUResourceObjectStyleGameMenuSideElement *> * _Nonnull topMenuContents;
@property (nonatomic, copy) NSArray<PTUResourceObjectStyleGameMenuSideElement *> * _Nonnull bottomMenuContents;
@property (nonatomic, copy) NSArray<PTUResourceObjectStyleFooterElement *> * _Nonnull footerContents;
- (void)closeGameMenu;
- (BOOL)gameMenu:(PTUGameMenu<PTUResourceObjectStyleGameMenu *> * _Null_unspecified)gameMenu didSelect:(NSString * _Null_unspecified)actionName actionURL:(NSString * _Null_unspecified)actionURL title:(NSString * _Null_unspecified)title SWIFT_WARN_UNUSED_RESULT;
- (void)gameMenu:(PTUGameMenu<PTUResourceObjectStyleGameMenu *> * _Null_unspecified)gameMenu didAskToOpenLink:(NSURL * _Null_unspecified)link;
- (void)sendEventOpenGameMenu;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface GameMenuViewModel (SWIFT_EXTENSION(platformUI)) <PTUGameControllerGenericObserver>
- (void)goldenChipsAvailable:(BOOL)available count:(uint64_t)count totalValue:(double)value;
- (void)freeSpinBonusesAvailable:(BOOL)available count:(uint64_t)count;
@end


@interface GameMenuViewModel (SWIFT_EXTENSION(platformUI)) <PTUResourceObserver>
- (void)resource:(PTUResource<id> * _Nonnull)resource didUpdateContentReadiness:(BOOL)readyContent;
- (void)resource:(PTUResource<id> * _Nonnull)resource didUpdateTreeReadiness:(BOOL)readyTree;
- (void)resource:(PTUResource<id> * _Nonnull)resourceArray didUpdateAvailableContents:(PTUResourceUpdate<id> * _Nonnull)updateResult;
@end

@class PTUStyleGameUIMenu;

SWIFT_PROTOCOL("_TtP10platformUI27GameMenuViewModelUIDelegate_")
@protocol GameMenuViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)updateSoundStateWithValue:(BOOL)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)updateHandednessWithValue:(PTUGameMenuHandednessType)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)updateFreeSpinCountWithValue:(uint64_t)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)updateGoldenChipCountWithValue:(uint64_t)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)setupStyle:(PTUStyleGameUIMenu * _Nonnull)style;
- (void)reloadData;
@end


/// GameUIOutput
SWIFT_CLASS("_TtC10platformUI12GameUIOutput")
@interface GameUIOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;

SWIFT_PROTOCOL("_TtP10platformUI25GameUIViewModelUIDelegate_")
@protocol GameUIViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)setSupportedOrientationsWithOrientationMask:(UIInterfaceOrientationMask)orientationMask;
- (void)attachKingdomRiseGameSuiteWebViewWithWebViewController:(UIViewController * _Nonnull)webViewController;
- (void)closeKingdomRiseGameSuiteWebViewWithWebViewController:(UIViewController * _Nonnull)webViewController;
@end

@class NSCoder;

SWIFT_CLASS("_TtC10platformUI12HelpsWebView")
@interface HelpsWebView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





/// Default view. Responsible for representing scene info on view.
/// SceneView it’s a container to presenting platform ui elements.
/// Once app locates scene on layer, it will look with following parts:
/// <ol>
///   <li>
///     Layer view, which containы scene view
///   </li>
///   <li>
///     Scene view, which containы scene ui elemnts.
///   </li>
///   <li>
///     And platform UI elements itself.
///   </li>
/// </ol>
SWIFT_PROTOCOL("_TtP10platformUI9SceneView_")
@protocol SceneView
- (void)willAppearOnPlatformLayer;
- (void)didAppearOnPlatformLayer;
@end


@interface HelpsWebView (SWIFT_EXTENSION(platformUI)) <SceneView>
- (void)willAppearOnPlatformLayer;
- (void)didAppearOnPlatformLayer;
@end



SWIFT_PROTOCOL("_TtP10platformUI39OverMenuButtonPopupsViewModelUIDelegate_")
@protocol OverMenuButtonPopupsViewModelUIDelegate <SceneViewModelUIDelegate>
@end



/// It’s a class which enableds us to use swift protocol PTUResourceObjectStyle… in obj-c protocols.
SWIFT_CLASS("_TtC10platformUI43PTUResourceObjectStyleAutoplayLimitsWrapper")
@interface PTUResourceObjectStyleAutoplayLimitsWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUResourceObjectStyleTimerPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI43PTUResourceObjectStyleGCNotificationWrapper")
@interface PTUResourceObjectStyleGCNotificationWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUResourceObjectStyleTimerPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI40PTUResourceObjectStyleGameLoadingWrapper")
@interface PTUResourceObjectStyleGameLoadingWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUResourceObjectStyleTimerPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI29PTUResourceObjectStyleWrapper")
@interface PTUResourceObjectStyleWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUStyleResourceNetlossCooldownPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI43PTUStyleResourceNetlossCooldownPanelWrapper")
@interface PTUStyleResourceNetlossCooldownPanelWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUStyleResourceSessionPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI35PTUStyleResourceSessionPanelWrapper")
@interface PTUStyleResourceSessionPanelWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PTUMiddleLayerController;
@class PTUGameEngineGameAndView;

/// Platfrom it’s framework which enables us to show native UI over game window.
/// Tips.
/// <ol>
///   <li>
///     In order to import Obj-C (C) class into swift write import header file into platformUI.h file.
///   </li>
///   <li>
///     In order to use swift file in Obj-C file just use forward declare of class name (@class TourClassName) in .h file and import #import <platformUI/platformUI-Swift.h> in Obj-C .m file.
///   </li>
/// </ol>
SWIFT_CLASS("_TtC10platformUI8Platform")
@interface Platform : NSObject
- (nullable instancetype)initWithMiddleLayerController:(PTUMiddleLayerController * _Nonnull)middleLayerController gameEngineAndView:(PTUGameEngineGameAndView * _Nonnull)gameEngineAndView commonUIConfig:(NSDictionary<NSString *, id> * _Nonnull)commonUIConfig gameUIConfig:(NSDictionary<NSString *, id> * _Nonnull)gameUIConfig stylesUIConfig:(NSDictionary<NSString *, id> * _Nonnull)stylesUIConfig gameMenuButtonsModelConfig:(NSDictionary<NSString *, id> * _Nonnull)gameMenuButtonsModelConfig OBJC_DESIGNATED_INITIALIZER;
- (void)prepareToBeClosed:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class PTUEnhancedMessageButtonAction;

@interface Platform (SWIFT_EXTENSION(platformUI)) <PTUEnhancedMessageButtonActionHandler>
- (void)enhancedMessageButtonAction:(PTUEnhancedMessageButtonAction * _Nonnull)buttonAction openAnotherGameWithGameCode:(NSString * _Nonnull)gameCode;
- (void)enhancedMessageButtonAction:(PTUEnhancedMessageButtonAction * _Nonnull)buttonAction openURL:(NSURL * _Nonnull)url;
- (void)enhancedMessageButtonAction:(PTUEnhancedMessageButtonAction * _Nonnull)buttonAction openDepositWithCloseGame:(BOOL)shouldCloseGame;
@end


@interface Platform (SWIFT_EXTENSION(platformUI))
- (void)openWithUrl:(NSURL * _Nonnull)url title:(NSString * _Nullable)title;
/// This function will prepare Placeholders and ask url template to open webview.
- (void)openTemplate:(NSString * _Nonnull)templateUrl title:(NSString * _Nullable)title;
@end


/// Platform router it’s a main routing object in platform framework.
/// PlatformRouter is responsible for getting actions from scenes and interact with them.
/// Use this class to show different kind of layers.
/// Now Platform is able to show following UI:
/// <ul>
///   <li>
///     inGameMenu
///   </li>
///   <li>
///     clock
///   </li>
///   <li>
///     overMenuButtonPopups
///   </li>
///   <li>
///     inGameMenuButton
///   </li>
///   <li>
///     goldenChipReceivingNotification
///   </li>
///   <li>
///     underMenuButtonPopups
///   </li>
///   <li>
///     topPanel
///   </li>
///   <li>
///     bottomPanel
///   </li>
///   <li>
///     youWinBottomMessage
///   </li>
///   <li>
///     betLimitTips
///   </li>
///   <li>
///     totalBetOnPositionTip
///   </li>
/// </ul>
SWIFT_CLASS("_TtC10platformUI14PlatformRouter")
@interface PlatformRouter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end








typedef SWIFT_ENUM(NSInteger, SessionPanelElementType, open) {
  SessionPanelElementTypeClock = 0,
  SessionPanelElementTypeSessionTimer = 1,
  SessionPanelElementTypeDate = 2,
  SessionPanelElementTypeAll = 3,
};

@class PTUStyleSessionPanel;

SWIFT_PROTOCOL("_TtP10platformUI36SessionTimerPanelViewModelUIDelegate_")
@protocol SessionTimerPanelViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)show;
- (void)dismiss;
- (void)showLabelValueOnly:(BOOL)value;
- (void)updateTime:(NSString * _Nonnull)dateString;
- (void)updateSessionTime:(NSString * _Nonnull)dateString;
- (void)updateDate:(NSString * _Nonnull)dateString;
- (void)setStyle:(PTUStyleSessionPanel * _Nonnull)style;
- (void)setSessionPanelElementTypeWithType:(enum SessionPanelElementType)type style:(PTUStyleResourceSessionPanelWrapper * _Nonnull)style;
@end


/// <#Description#>
SWIFT_CLASS("_TtC10platformUI21TimerPanelSceneOutput")
@interface TimerPanelSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





@class TransitionOptions;

@interface UIView (SWIFT_EXTENSION(platformUI))
- (void)applyTransitionAnimationOption:(TransitionOptions * _Nonnull)option completion:(void (^ _Nullable)(void))completion;
- (void)applyTransitionFadeAnimationOption:(TransitionOptions * _Nonnull)option completion:(void (^ _Nullable)(void))completion;
@end

enum Direction : NSInteger;
enum Curve : NSInteger;

SWIFT_CLASS("_TtCE10platformUICSo6UIView17TransitionOptions")
@interface TransitionOptions : NSObject
/// Initialize a new options object with given direction and curve
/// \param direction direction
///
/// \param style style
///
- (nonnull instancetype)initWithDirection:(enum Direction)direction style:(enum Curve)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Curve, open) {
  CurveLinear = 0,
  CurveEaseIn = 1,
  CurveEaseOut = 2,
  CurveEaseInOut = 3,
};

typedef SWIFT_ENUM(NSInteger, Direction, open) {
  DirectionFade = 0,
  DirectionToTop = 1,
  DirectionToBottom = 2,
  DirectionToLeft = 3,
  DirectionToRight = 4,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef PLATFORMUI_SWIFT_H
#define PLATFORMUI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import Middle;
@import ObjectiveC;
@import Tools;
@import UIKit;
@import resources;
#endif

#import <platformUI/platformUI.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="platformUI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

/// GameMenuButton scene output
SWIFT_CLASS("_TtC10platformUI22BottomPanelSceneOutput")
@interface BottomPanelSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10platformUI24SceneViewModelUIDelegate_")
@protocol SceneViewModelUIDelegate
@end

@class PTUResourceObjectStyleButton;
@class PTUStyleLabel;
@class PTUResourceObjectStyleImageView;
@class NSString;

SWIFT_PROTOCOL("_TtP10platformUI30BottomPanelViewModelUIDelegate_")
@protocol BottomPanelViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)setBalanceLabelStyle:(PTUResourceObjectStyleButton * _Nonnull)resourceStyle;
- (void)setGameModeLabelStyle:(PTUStyleLabel * _Nonnull)style;
- (void)setLogoImageStyle:(PTUResourceObjectStyleImageView * _Nonnull)resourceStyle;
- (void)setGameMode:(PTSDKGameMode)mode;
- (void)setDynamicBalance:(NSString * _Nonnull)dynamicBalance;
- (void)didChangeBottomBarVisibility:(BOOL)bottomBarVisible;
@end


/// <#Description#>
SWIFT_CLASS("_TtC10platformUI17GameLoadingOutput")
@interface GameLoadingOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PTUResourceObjectStyleGameLoadingWrapper;

SWIFT_PROTOCOL("_TtP10platformUI30GameLoadingViewModelUIDelegate_")
@protocol GameLoadingViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)showLoadingView;
- (void)hideLoadingView;
- (void)startAnimation;
- (void)stopAnimation;
- (void)hideText;
- (void)updateProgress:(double)progress;
- (void)applySceneStyle:(PTUResourceObjectStyleGameLoadingWrapper * _Nonnull)objectStyleResourceWrapper;
@end


/// GameMenuButton scene output
SWIFT_CLASS("_TtC10platformUI25GameMenuButtonSceneOutput")
@interface GameMenuButtonSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10platformUI33GameMenuButtonViewModelUIDelegate_")
@protocol GameMenuButtonViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)setNoticeLabelStyle:(PTUStyleLabel * _Nonnull)style;
- (void)showNotice:(BOOL)show;
- (void)changeEnablingOfMenuButton:(BOOL)enabled;
- (void)changeVisibleOfBackButton:(BOOL)isVisible;
- (void)changeVisibleOfBottomBar:(BOOL)isVisible;
- (void)changeVisibleOfMenuButton:(BOOL)isVisible;
@end


SWIFT_CLASS("_TtC10platformUI19GameMenuSceneOutput")
@interface GameMenuSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol GameMenuViewModelUIDelegate;
@class PTUResourceObjectStyleGameMenuSideElement;
@class PTUResourceObjectStyleFooterElement;
@class NSURL;

/// Game menu view model. It responsible for providing game menu elements.
SWIFT_CLASS("_TtC10platformUI17GameMenuViewModel")
@interface GameMenuViewModel : NSObject
@property (nonatomic, strong) GameMenuSceneOutput * _Nonnull output;
@property (nonatomic, weak) id <GameMenuViewModelUIDelegate> _Nullable uiDelegate;
/// Array of style resource
@property (nonatomic, copy) NSArray<PTUResourceObjectStyleGameMenuSideElement *> * _Nonnull topMenuContents;
@property (nonatomic, copy) NSArray<PTUResourceObjectStyleGameMenuSideElement *> * _Nonnull bottomMenuContents;
@property (nonatomic, copy) NSArray<PTUResourceObjectStyleFooterElement *> * _Nonnull footerContents;
- (void)closeGameMenu;
- (BOOL)gameMenu:(PTUGameMenu<PTUResourceObjectStyleGameMenu *> * _Null_unspecified)gameMenu didSelect:(NSString * _Null_unspecified)actionName actionURL:(NSString * _Null_unspecified)actionURL title:(NSString * _Null_unspecified)title SWIFT_WARN_UNUSED_RESULT;
- (void)gameMenu:(PTUGameMenu<PTUResourceObjectStyleGameMenu *> * _Null_unspecified)gameMenu didAskToOpenLink:(NSURL * _Null_unspecified)link;
- (void)sendEventOpenGameMenu;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface GameMenuViewModel (SWIFT_EXTENSION(platformUI)) <PTUGameControllerGenericObserver>
- (void)goldenChipsAvailable:(BOOL)available count:(uint64_t)count totalValue:(double)value;
- (void)freeSpinBonusesAvailable:(BOOL)available count:(uint64_t)count;
@end


@interface GameMenuViewModel (SWIFT_EXTENSION(platformUI)) <PTUResourceObserver>
- (void)resource:(PTUResource<id> * _Nonnull)resource didUpdateContentReadiness:(BOOL)readyContent;
- (void)resource:(PTUResource<id> * _Nonnull)resource didUpdateTreeReadiness:(BOOL)readyTree;
- (void)resource:(PTUResource<id> * _Nonnull)resourceArray didUpdateAvailableContents:(PTUResourceUpdate<id> * _Nonnull)updateResult;
@end

@class PTUStyleGameUIMenu;

SWIFT_PROTOCOL("_TtP10platformUI27GameMenuViewModelUIDelegate_")
@protocol GameMenuViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)updateSoundStateWithValue:(BOOL)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)updateHandednessWithValue:(PTUGameMenuHandednessType)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)updateFreeSpinCountWithValue:(uint64_t)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)updateGoldenChipCountWithValue:(uint64_t)value viewModel:(GameMenuViewModel * _Nonnull)viewModel;
- (void)setupStyle:(PTUStyleGameUIMenu * _Nonnull)style;
- (void)reloadData;
@end


/// GameUIOutput
SWIFT_CLASS("_TtC10platformUI12GameUIOutput")
@interface GameUIOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;

SWIFT_PROTOCOL("_TtP10platformUI25GameUIViewModelUIDelegate_")
@protocol GameUIViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)setSupportedOrientationsWithOrientationMask:(UIInterfaceOrientationMask)orientationMask;
- (void)attachKingdomRiseGameSuiteWebViewWithWebViewController:(UIViewController * _Nonnull)webViewController;
- (void)closeKingdomRiseGameSuiteWebViewWithWebViewController:(UIViewController * _Nonnull)webViewController;
@end

@class NSCoder;

SWIFT_CLASS("_TtC10platformUI12HelpsWebView")
@interface HelpsWebView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





/// Default view. Responsible for representing scene info on view.
/// SceneView it’s a container to presenting platform ui elements.
/// Once app locates scene on layer, it will look with following parts:
/// <ol>
///   <li>
///     Layer view, which containы scene view
///   </li>
///   <li>
///     Scene view, which containы scene ui elemnts.
///   </li>
///   <li>
///     And platform UI elements itself.
///   </li>
/// </ol>
SWIFT_PROTOCOL("_TtP10platformUI9SceneView_")
@protocol SceneView
- (void)willAppearOnPlatformLayer;
- (void)didAppearOnPlatformLayer;
@end


@interface HelpsWebView (SWIFT_EXTENSION(platformUI)) <SceneView>
- (void)willAppearOnPlatformLayer;
- (void)didAppearOnPlatformLayer;
@end



SWIFT_PROTOCOL("_TtP10platformUI39OverMenuButtonPopupsViewModelUIDelegate_")
@protocol OverMenuButtonPopupsViewModelUIDelegate <SceneViewModelUIDelegate>
@end



/// It’s a class which enableds us to use swift protocol PTUResourceObjectStyle… in obj-c protocols.
SWIFT_CLASS("_TtC10platformUI43PTUResourceObjectStyleAutoplayLimitsWrapper")
@interface PTUResourceObjectStyleAutoplayLimitsWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUResourceObjectStyleTimerPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI43PTUResourceObjectStyleGCNotificationWrapper")
@interface PTUResourceObjectStyleGCNotificationWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUResourceObjectStyleTimerPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI40PTUResourceObjectStyleGameLoadingWrapper")
@interface PTUResourceObjectStyleGameLoadingWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUResourceObjectStyleTimerPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI29PTUResourceObjectStyleWrapper")
@interface PTUResourceObjectStyleWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUStyleResourceNetlossCooldownPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI43PTUStyleResourceNetlossCooldownPanelWrapper")
@interface PTUStyleResourceNetlossCooldownPanelWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// It’s a class which helps use PTUStyleResourceSessionPanel in obj-c protocol, no more.
SWIFT_CLASS("_TtC10platformUI35PTUStyleResourceSessionPanelWrapper")
@interface PTUStyleResourceSessionPanelWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PTUMiddleLayerController;
@class PTUGameEngineGameAndView;

/// Platfrom it’s framework which enables us to show native UI over game window.
/// Tips.
/// <ol>
///   <li>
///     In order to import Obj-C (C) class into swift write import header file into platformUI.h file.
///   </li>
///   <li>
///     In order to use swift file in Obj-C file just use forward declare of class name (@class TourClassName) in .h file and import #import <platformUI/platformUI-Swift.h> in Obj-C .m file.
///   </li>
/// </ol>
SWIFT_CLASS("_TtC10platformUI8Platform")
@interface Platform : NSObject
- (nullable instancetype)initWithMiddleLayerController:(PTUMiddleLayerController * _Nonnull)middleLayerController gameEngineAndView:(PTUGameEngineGameAndView * _Nonnull)gameEngineAndView commonUIConfig:(NSDictionary<NSString *, id> * _Nonnull)commonUIConfig gameUIConfig:(NSDictionary<NSString *, id> * _Nonnull)gameUIConfig stylesUIConfig:(NSDictionary<NSString *, id> * _Nonnull)stylesUIConfig gameMenuButtonsModelConfig:(NSDictionary<NSString *, id> * _Nonnull)gameMenuButtonsModelConfig OBJC_DESIGNATED_INITIALIZER;
- (void)prepareToBeClosed:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class PTUEnhancedMessageButtonAction;

@interface Platform (SWIFT_EXTENSION(platformUI)) <PTUEnhancedMessageButtonActionHandler>
- (void)enhancedMessageButtonAction:(PTUEnhancedMessageButtonAction * _Nonnull)buttonAction openAnotherGameWithGameCode:(NSString * _Nonnull)gameCode;
- (void)enhancedMessageButtonAction:(PTUEnhancedMessageButtonAction * _Nonnull)buttonAction openURL:(NSURL * _Nonnull)url;
- (void)enhancedMessageButtonAction:(PTUEnhancedMessageButtonAction * _Nonnull)buttonAction openDepositWithCloseGame:(BOOL)shouldCloseGame;
@end


@interface Platform (SWIFT_EXTENSION(platformUI))
- (void)openWithUrl:(NSURL * _Nonnull)url title:(NSString * _Nullable)title;
/// This function will prepare Placeholders and ask url template to open webview.
- (void)openTemplate:(NSString * _Nonnull)templateUrl title:(NSString * _Nullable)title;
@end


/// Platform router it’s a main routing object in platform framework.
/// PlatformRouter is responsible for getting actions from scenes and interact with them.
/// Use this class to show different kind of layers.
/// Now Platform is able to show following UI:
/// <ul>
///   <li>
///     inGameMenu
///   </li>
///   <li>
///     clock
///   </li>
///   <li>
///     overMenuButtonPopups
///   </li>
///   <li>
///     inGameMenuButton
///   </li>
///   <li>
///     goldenChipReceivingNotification
///   </li>
///   <li>
///     underMenuButtonPopups
///   </li>
///   <li>
///     topPanel
///   </li>
///   <li>
///     bottomPanel
///   </li>
///   <li>
///     youWinBottomMessage
///   </li>
///   <li>
///     betLimitTips
///   </li>
///   <li>
///     totalBetOnPositionTip
///   </li>
/// </ul>
SWIFT_CLASS("_TtC10platformUI14PlatformRouter")
@interface PlatformRouter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end








typedef SWIFT_ENUM(NSInteger, SessionPanelElementType, open) {
  SessionPanelElementTypeClock = 0,
  SessionPanelElementTypeSessionTimer = 1,
  SessionPanelElementTypeDate = 2,
  SessionPanelElementTypeAll = 3,
};

@class PTUStyleSessionPanel;

SWIFT_PROTOCOL("_TtP10platformUI36SessionTimerPanelViewModelUIDelegate_")
@protocol SessionTimerPanelViewModelUIDelegate <SceneViewModelUIDelegate>
- (void)show;
- (void)dismiss;
- (void)showLabelValueOnly:(BOOL)value;
- (void)updateTime:(NSString * _Nonnull)dateString;
- (void)updateSessionTime:(NSString * _Nonnull)dateString;
- (void)updateDate:(NSString * _Nonnull)dateString;
- (void)setStyle:(PTUStyleSessionPanel * _Nonnull)style;
- (void)setSessionPanelElementTypeWithType:(enum SessionPanelElementType)type style:(PTUStyleResourceSessionPanelWrapper * _Nonnull)style;
@end


/// <#Description#>
SWIFT_CLASS("_TtC10platformUI21TimerPanelSceneOutput")
@interface TimerPanelSceneOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





@class TransitionOptions;

@interface UIView (SWIFT_EXTENSION(platformUI))
- (void)applyTransitionAnimationOption:(TransitionOptions * _Nonnull)option completion:(void (^ _Nullable)(void))completion;
- (void)applyTransitionFadeAnimationOption:(TransitionOptions * _Nonnull)option completion:(void (^ _Nullable)(void))completion;
@end

enum Direction : NSInteger;
enum Curve : NSInteger;

SWIFT_CLASS("_TtCE10platformUICSo6UIView17TransitionOptions")
@interface TransitionOptions : NSObject
/// Initialize a new options object with given direction and curve
/// \param direction direction
///
/// \param style style
///
- (nonnull instancetype)initWithDirection:(enum Direction)direction style:(enum Curve)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Curve, open) {
  CurveLinear = 0,
  CurveEaseIn = 1,
  CurveEaseOut = 2,
  CurveEaseInOut = 3,
};

typedef SWIFT_ENUM(NSInteger, Direction, open) {
  DirectionFade = 0,
  DirectionToTop = 1,
  DirectionToBottom = 2,
  DirectionToLeft = 3,
  DirectionToRight = 4,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
